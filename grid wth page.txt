import React, { useState } from 'react';
import { Grid, GridColumn, GridToolbar } from '@progress/kendo-react-grid';
import { process } from '@progress/kendo-data-query';

const KendoGrid = ({ columns, data, pagination, pageSize }) => {
  const [filter, setFilter] = useState('');
  const [gridData, setGridData] = useState(data);
  const [skip, setSkip] = useState(0);

  const handleFilterChange = (event) => {
    setFilter(event.target.value);
  };

  const handleSearch = () => {
    const filteredData = data.filter(item => {
      // Perform filtering logic based on filter value and item properties
      return Object.values(item).some(val =>
        val.toString().toLowerCase().includes(filter.toLowerCase())
      );
    });
    setGridData(filteredData);
  };

  const handlePageChange = (event) => {
    setSkip(event.page.skip);
  };

  const paginatedData = pagination
    ? process(gridData, { skip, take: pageSize })
    : gridData;

  return (
    <div>
      <input
        type="text"
        placeholder="Filter..."
        value={filter}
        onChange={handleFilterChange}
      />
      <button onClick={handleSearch}>Search</button>
      <Grid
        data={paginatedData}
        skip={skip}
        take={pageSize}
        pageable={pagination}
        onPageChange={handlePageChange}
      >
        <GridToolbar />
        {columns.map((column, index) => (
          <GridColumn key={index} field={column.field} title={column.title} />
        ))}
      </Grid>
    </div>
  );
};

export default KendoGrid;
