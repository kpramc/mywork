import { useState, useEffect } from 'react';
import axios from 'axios';

const DataGrid = () => {
  const [data, setData] = useState([]);
  const [filteredData, setFilteredData] = useState([]);
  const [sortBy, setSortBy] = useState(null);
  const [sortOrder, setSortOrder] = useState('asc');
  const [filter, setFilter] = useState('');
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(0);

  useEffect(() => {
    loadData();
  }, [currentPage, filter, sortBy, sortOrder]);

  const loadData = async () => {
    try {
      const response = await axios.get(
        `https://api.example.com/data?page=${currentPage}&filter=${filter}&sortBy=${sortBy}&sortOrder=${sortOrder}`
      );
      const { data: newData, totalPages: newTotalPages } = response.data;
      setData(newData);
      setFilteredData(newData);
      setTotalPages(newTotalPages);
    } catch (error) {
      console.error('Error loading data:', error);
    }
  };

  const handleFilterChange = (event) => {
    setFilter(event.target.value);
  };

  const handleSort = (sortByField) => {
    if (sortByField === sortBy) {
      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');
    } else {
      setSortBy(sortByField);
      setSortOrder('asc');
    }
  };

  const handlePageChange = (page) => {
    setCurrentPage(page);
  };

  return (
    <div>
      <input type="text" placeholder="Filter..." value={filter} onChange={handleFilterChange} />
      <table>
        <thead>
          <tr>
            <th onClick={() => handleSort('column1')}>Column 1</th>
            <th onClick={() => handleSort('column2')}>Column 2</th>
            <th onClick={() => handleSort('column3')}>Column 3</th>
            {/* Add more columns as needed */}
          </tr>
        </thead>
        <tbody>
          {filteredData.map((row) => (
            <tr key={row.id}>
              <td>{row.column1}</td>
              <td>{row.column2}</td>
              <td>{row.column3}</td>
              {/* Render more columns as needed */}
            </tr>
          ))}
        </tbody>
      </table>
      <div>
        {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
          <button key={page} onClick={() => handlePageChange(page)}>{page}</button>
        ))}
      </div>
    </div>
  );
};

export default DataGrid;
